name: USBODE CI Build

permissions:
  contents: write

on:
  push:
    branches: [ "*" ]

jobs:
  build:

    runs-on: [self-hosted]

    steps:
    - name: Clean workspace
      run: |
        git clean -ffdx
        git reset --hard HEAD
        git submodule foreach --recursive git clean -ffdx
        git submodule foreach --recursive git reset --hard HEAD
        git submodule deinit --all --force
    
    - uses: actions/checkout@v4
      with:
        submodules:  recursive
        clean: true
    - name: Build
      run: make release BUILD_NUMBER=${{ github.run_number }}

    - name: Get filename
      id: get-filename
      run: |
        FILENAME_FULL=$(ls usbode*.zip | grep -v -- '-64bit.zip' | xargs basename)
        FILENAME=${FILENAME_FULL%.zip}
        echo "Found file: $FILENAME"
        echo "filename=$FILENAME" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@v4
      with:
        # Using the extracted filename as the artifact name
        name: ${{ steps.get-filename.outputs.filename }}
        path: dist/*
        if-no-files-found: error
        retention-days: 90
        compression-level: 6
        overwrite: true
        include-hidden-files: false

    - uses: actions/upload-artifact@v4
      with:
        # Using the extracted filename as the artifact name
        name: ${{ steps.get-filename.outputs.filename }}-64bit
        path: dist64/*
        if-no-files-found: error
        retention-days: 90
        compression-level: 6
        overwrite: true
        include-hidden-files: false

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.get-filename.outputs.filename }}-images
        path: imgout/*
        if-no-files-found: error
        retention-days: 90
        compression-level: 6
        overwrite: true
        include-hidden-files: false

    - name: Create Release (on main only)
      if: github.ref == 'refs/heads/main'
      id: create-release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: build-${{ github.run_number }}
        name: USBODE build-${{ github.run_number }}
        files: | 
          ${{ steps.get-filename.outputs.filename }}.zip
          ${{ steps.get-filename.outputs.filename }}-64bit.zip
          imgout/${{ steps.get-filename.outputs.filename }}.img.xz
          imgout/${{ steps.get-filename.outputs.filename }}-64bit.img.xz
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 